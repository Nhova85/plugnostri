FFL1.0
   20
CircMove.8bf
Andrew's Filters 3
Moving Circle...
AB
Freeware




X
Y
Red Channel
Green Channel
Blue Channel



151
179
68
68
67
0
0
0
sqr((x-val(0,0,X))*(x-val(0,0,X))+(y-val(1,0,Y))*(y-val(1,0,Y)))==val(2,0,M)?255:c
sqr((x-val(0,0,X))*(x-val(0,0,X))+(y-val(1,0,Y))*(y-val(1,0,Y)))==val(3,0,M)?255:c
sqr((x-val(0,0,X))*(x-val(0,0,X))+(y-val(1,0,Y))*(y-val(1,0,Y)))==val(4,0,M)?255:c
a
LiveWire.8bf
Andrew's Filters 3
Live Wire...
AB
Freeware




Red Channel
Green Channel
Blue Channel
Intensity




140
60
51
127
0
0
0
0
val(0,0,1000)*c/abs(sin(x)-val(3,-3,3)*cos(y))
val(1,0,1000)*c/abs(sin(x)-val(3,-3,3)*cos(y))
val(2,0,1000)*c/abs(sin(x)-val(3,-3,3)*cos(y))
a
Mezzo1.8bf
Andrew's Filters 3
Mezzo Burst...
AB
Freeware




Red Chanel
Green Channel
Blue Channel





200
190
82
0
0
0
0
0
m%val(0,1,10)?r/3+rnd(1,m)+c/3:0
m%val(1,1,10)?g/3+rnd(1,m)+c/3:0
m%val(2,1,10)?b/3+rnd(1,m)+c/3:0
a
Mixup.8bf
Andrew's Filters 3
Mixup
AB
Freeware












0
0
0
0
0
0
0
0
g+rnd(0,5)
b+rnd(0,5)
r+rnd(0,5)
a
MoveBlur.8bf
Andrew's Filters 3
Mild Moves...
AB
Freeware




Red Channel
Green Channel
Blue Channel





112
18
134
0
0
0
0
0
sqr(c*c+src(x+ctl(0),y+ctl(0),0)*src(x-ctl(0),y-ctl(0),0))
sqr(c*c+src(x+ctl(1),y+ctl(1),1)*src(x-ctl(1),y-ctl(1),1))
sqr(c*c+src(x+ctl(2),y+ctl(2),2)*src(x-ctl(2),y-ctl(2),2))
a
Noise1.8bf
Andrew's Filters 3
Not so Noisy...
AB
Freeware




Red Channel
Green Channel
Blue Channel





201
168
169
0
0
0
0
0
add(r,g,b)+rnd(-100,100)+c-ctl(0)
add(g,r,b)+rnd(-100,100)+c-ctl(1)
add(b,g,r)+rnd(-100,100)+c-ctl(2)
a
NoisMir.8bf
Andrew's Filters 3
Mirrored Noise...
AB
Freeware




Divider
Red Channel
Green Channel
Blue Channel




129
59
107
136
0
0
0
0
y>Y-val(0,0,Y)?src(x,Y-y,0)+rnd(0,ctl(1)):c
y>Y-val(0,0,Y)?src(x,Y-y,1)+rnd(0,ctl(2)):c
y>Y-val(0,0,Y)?src(x,Y-y,2)+rnd(0,ctl(3)):c
a
OddPool.8bf
Andrew's Filters 3
Odd Pool...
AB
Freeware




Divider







133
0
0
0
0
0
0
0
y>val(0,0,Y)?src(x,sqr(x*x+4*(val(0,y,Y)-Y)*(val(0,y,Y)-Y)),0):c
y>val(0,0,Y)?src(x,sqr(x*x+4*(val(0,y,Y)-Y)*(val(0,y,Y)-Y)),1):c
y>val(0,0,Y)?src(x,sqr(x*x+4*(val(0,y,Y)-Y)*(val(0,y,Y)-Y)),2):c
a
OutBound.8bf
Andrew's Filters 3
Outward Bound...
AB
Freeware




Red Channel
Green Channel
Blue Channel





103
185
117
0
0
0
0
0
(M-m)%val(0,1,10)&&(D-d)%val(0,1,10)?c:c/2
(M-m)%val(1,1,10)&&(D-d)%val(1,1,10)?c:c/2
(M-m)%val(2,1,10)&&(D-d)%val(2,1,10)?c:c/2
a
OuterNse.8bf
Andrew's Filters 3
Outer Noise...
AB
Freeware




Damper







14
0
0
0
0
0
0
0
rad(d+rnd(0,d-ctl(0)),m+rnd(0,m-ctl(0)),0)
rad(d+rnd(0,d-ctl(0)),m+rnd(0,m-ctl(0)),1)
rad(d+rnd(0,d-ctl(0)),m+rnd(0,m-ctl(0)),2)
a
RadShove.8bf
Andrew's Filters 3
Radial Shoved...
AB
Freeware




Push Out Factor







190
0
0
0
0
0
0
0
(c+rad(d,m+val(0,1,10),0)+rad(d,(m-val(0,1,10)),0))/3
(c+rad(d,m+val(0,1,10),1)+rad(d,m-val(0,1,10),1))/3
(c+rad(d,m+val(0,1,10),2)+rad(d,m-val(0,1,10),2))/3
a
RadSwp.8bf
Andrew's Filters 3
Radial Swap...
AB
Freeware




Red Channel
Green Channel
Blue Channel





9
6
7
0
0
0
0
0
c>rad(d,m-ctl(0),0)?rad(d,m-ctl(0),0):c
c>rad(d,m-ctl(1),1)?rad(d,m-ctl(1),1):c
c>rad(d,m-ctl(2),2)?rad(d,m-ctl(2),2):c
a
RefPool.8bf
Andrew's Filters 3
Reflection Pool...
AB
Freeware




Divider







131
0
0
0
0
0
0
0
y>val(0,0,Y)?src(x,2*(Y-val(0,y,Y)),0):c
y>val(0,0,Y)?src(x,2*(Y-val(0,y,Y)),1):c
y>val(0,0,Y)?src(x,2*(Y-val(0,y,Y)),1):src(x,y,1)
a
RingCol.8bf
Andrew's Filters 3
Rings of Colour...
AB
Freeware




Red Channel
Green Channel
Blue Channel





27
23
21
0
0
0
0
0
M-m>ctl(0)?c:256
M-m>ctl(1)?c:256
M-m>ctl(2)?c:256
a
RndFzz.8bf
Andrew's Filters 3
Random Fuzz Pushout...
AB
Freeware




Red Channel
Green Channel
Blue Channel





15
24
85
0
0
0
0
0
m>val(0,0,M/rnd(0,4))?rad(d,m-val(0,0,M/rnd(0,4)),0):rad(d,m+val(0,0,M/rnd(0,4)),0)
m>val(1,0,M/rnd(0,4))?rad(d,m-val(1,0,M/rnd(0,4)),1):rad(d,m+val(1,0,M/rnd(0,4)),1)
m>val(2,0,M/rnd(0,4))?rad(d,m-val(2,0,M/rnd(0,4)),2):rad(d,m+val(2,0,M/rnd(0,4)),2)
a
Shrink.8bf
Andrew's Filters 3
Shrinker...
AB
Freeware




Red X
Red Y
Green X
Green Y
Blue X
Blue Y
Background Colour

165
114
130
110
109
55
240
0
x>X/val(0,1,5)||y>Y/val(3,1,5)?ctl(6):src(val(0,1,5)*x,val(3,1,5)*y,0)
x>X/val(1,1,5)||y>Y/val(4,1,5)?ctl(6):src(val(1,1,5)*x,val(4,1,5)*y,1)
x>X/val(2,1,5)||y>Y/val(5,1,5)?ctl(6):src(val(2,1,5)*x,val(5,1,5)*y,2)
a
SuckHl.8bf
Andrew's Filters 3
Sucked Into A Hole...
AB
Freeware




Red
Green
Blue
x
y



71
58
71
112
131
0
0
0
src(val(3,-X,X)+sin(x-y+ctl(0))%x,val(4,-Y,Y)+y,0)
src(val(3,-X,X)+sin(x-y+ctl(1))%x,y+val(4,-Y,Y),1)
src(val(3,-X,X)+sin(x-y+ctl(2))%x,y+val(4,-Y,Y),2)
a
SureRand.8bf
Andrew's Filters 3
Sure Is A Random Thing...
AB
Freeware




Red Min
Red Max
Green Min
Green Max
Blue Min
Blue Max
Random

18
66
44
193
125
160
208
0
c>ctl(0)&&c<ctl(1)?rnd(0,ctl(6)):c
c>ctl(2)&&c<ctl(3)?rnd(0,ctl(6)):c
c>ctl(4)&&c<ctl(5)?rnd(0,ctl(6)):c
a
TanLight.8bf
Andrew's Filters 3
Tanned Lights...
AB
Freeware




Red Tan
Green Tan
Blue Tan
Red Cut
Green Cut
Blue Cut
Super Factor

55
142
109
16
201
86
43
0
val(0,-1,2)*tan(dif(ctl(6)^x,y))+c-ctl(3)
val(1,-1,2)*tan(dif(ctl(6)^x,y))+c-ctl(4)
val(2,-1,2)*tan(dif(ctl(6)^x,y))+c-ctl(5)
a
TeaClth.8bf
Andrew's Filters 3
Folding A Tea Cloth...
AB
Freeware




Red x
Red y
Green x
Green y
Blue x
Blue y


10
10
10
10
10
10
0
0
src(dif((X-x)*ctl(0),x)/10,dif(Y-y,y)*ctl(1)/10,0)
src(dif(X-x,x)*ctl(2)/10,dif(Y-y,y)*ctl(3)/10,1)
src(dif(X-x,x)*ctl(4)/10,dif(Y-y,y)*ctl(5)/10,2)
a
